plugins {
    id 'fahrschein.java-conventions'
}

dependencies {
    testImplementation project(':fahrschein')
    testImplementation project(':fahrschein-http-simple')
    testImplementation project(':fahrschein-http-apache')
    testImplementation project(':fahrschein-http-spring')
    testImplementation project(':fahrschein-http-jdk11')
    testImplementation "com.squareup.okhttp3:okhttp:${property('okHttpV')}"
    testImplementation "com.squareup.okhttp3:logging-interceptor:${property('okHttpV')}"
    testImplementation "org.testcontainers:testcontainers:${property('testContainersV')}"
    testImplementation "com.fasterxml.jackson.core:jackson-core:${property('jacksonV')}"
    testImplementation "com.fasterxml.jackson.core:jackson-annotations:${property('jacksonV')}"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:${property('jacksonV')}"
    testImplementation "com.fasterxml.jackson.module:jackson-module-parameter-names:${property('jacksonV')}"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${property('jacksonV')}"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${property('jacksonV')}"
}

test {
    onlyIf { ! project.hasProperty('e2e.skip') }
    maxParallelForks = 1
    systemProperty "COMPOSE_PROVIDED", project.hasProperty("e2e.composeProvided") ? "true" : "false"
}

java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11
